{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Jonadest\\\\Documents\\\\Web Dev\\\\Projects\\\\React Projects\\\\new-time\\\\src\\\\Components\\\\Time.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport timeZone from \"./timeZone\"; // Import the new timeZone array\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Time = () => {\n  _s();\n  const [time, setTime] = useState(new Date());\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setTime(new Date());\n    }, 1000); // 1000 milliseconds (1 second)\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  // Define a function to format time based on the time zone\n  const getFormattedTime = (time, timeZone) => {\n    return time.toLocaleTimeString(undefined, {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      timeZone: timeZone\n    });\n  };\n  const localTime = time.toLocaleTimeString(undefined, {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clock-body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"local-time\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Local Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: localTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"By Jonadest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clock\",\n      children: timeZone.map((zone, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: zone.city,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: zone.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: getFormattedTime(time, zone.zone)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Time, \"I0+7QaEsXHXB0XO5JypI3yBHjPI=\");\n_c = Time;\nexport default Time;\nvar _c;\n$RefreshReg$(_c, \"Time\");","map":{"version":3,"names":["React","useState","useEffect","timeZone","jsxDEV","_jsxDEV","Time","_s","time","setTime","Date","intervalId","setInterval","clearInterval","getFormattedTime","toLocaleTimeString","undefined","hour","minute","second","localTime","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","zone","index","city","_c","$RefreshReg$"],"sources":["D:/Users/Jonadest/Documents/Web Dev/Projects/React Projects/new-time/src/Components/Time.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport timeZone from \"./timeZone\"; // Import the new timeZone array\r\n\r\nconst Time = () => {\r\n  const [time, setTime] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setTime(new Date());\r\n    }, 1000); // 1000 milliseconds (1 second)\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  // Define a function to format time based on the time zone\r\n  const getFormattedTime = (time, timeZone) => {\r\n    return time.toLocaleTimeString(undefined, {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      second: \"2-digit\",\r\n      timeZone: timeZone,\r\n    });\r\n  };\r\n\r\n  const localTime = time.toLocaleTimeString(undefined, {\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n  });\r\n\r\n  return (\r\n    <div className=\"clock-body\">\r\n    <div className=\"local-time\">\r\n    <p>Local Time</p>\r\n    <h2 className=\"text-center\">{localTime}</h2>\r\n    <p>By Jonadest</p>\r\n    <br />\r\n  </div>\r\n    <div className=\"clock\">\r\n     \r\n      \r\n      {timeZone.map((zone, index) => (\r\n        <div key={index} className={zone.city}>\r\n          <p>{zone.city}</p>\r\n          <h2>{getFormattedTime(time, zone.zone)}</h2>\r\n        </div>\r\n      ))}\r\n    </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Time;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}